# Improve bash UX
#1. Autocorrect simply typos when doing `cd`
shopt -s cdspell
#2. Prevent escaping $ on expansion. Solution taken
# from https://askubuntu.com/questions/70750/how-to-get-bash-to-stop-escaping-during-tab-completion
# and https://superuser.com/questions/492430/how-do-i-restore-tab-completion-on-shell-variables-on-the-bash-command-line
shopt -s direxpand
shopt -u progcomp
# When the shell exits, append the the history. Default behaviour is to replace
# it.
shopt -s histappend

# History default to 1000. Lets allow a big history
export HISTSIZE=10000
export HISTTIMEFORMAT="(%d-%h %H:%M) "
export HISTIGNORE='pwd:exit:fg:bg:top:clear:history:ls:uptime:df:ll'
# Don't add to history if the command starts with a space
export HISTCONTROL=ignoreboth
# The below PROMPT_COMMAND is useful for syncing when you have multiple tabs going
# however after using this for a while, I've found some issues using this so
# commenting out and leaving as a reference for now.
# PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND; history -a; history -c; history -r}"

# Set up environment variables
export PATH=$HOME/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
# Node
export PATH=$HOME/.npm-global/bin:$PATH

export VISUAL=vim
export EDITOR="$VISUAL"

# Oracle
# According to this: http://dbaparadise.com/2017/08/how-to-make-login-sql-work-again-in-12-2-and-11-2-0-4/
# or this: https://oracle-base.com/articles/12c/sqlplus-enhancements-12c
# SQLPlus looks for `ORACLE_PATH` on UNIX and `SQLPATH` on Windows environments
export ORACLE_PATH=$HOME/Projects/login_sql/
export SQLPATH=$HOME/Projects/login_sql/
export TNS_ADMIN=/home/trent/Oracle

# Docker host so the system thinks we are using Docker for API related components
# This corresponds to issuing the following command:
# - systemctl --user enable --now podman.socket
export DOCKER_HOST=unix:///run/user/1000/podman/podman.sock

# When using the OCI SDK in python, prevent loading the full thing into memory.
# Mentioned in this issue: https://github.com/oracle/oci-python-sdk/issues/386#issuecomment-930619452
# With this set to 1, instead of `import oci` you would do `from oci import module`
# e.g. from oci import identity
# export OCI_PYTHON_SDK_NO_SERVICE_IMPORTS=1

# Completions
source <(kubectl completion bash)
complete -o default -F __start_kubectl k

complete -C /usr/bin/terraform terraform
complete -C /usr/bin/terraform t

# OCI completions
# Get script by `oci setup autcomplete`
[[ -e "$HOME/lib/oci_autocomplete.sh" ]] && source "$HOME/lib/oci_autocomplete.sh"

# Atuin
[[ -f ~/.bash-preexec.sh ]] && source ~/.bash-preexec.sh
eval "$(atuin init bash --disable-up-arrow)"
